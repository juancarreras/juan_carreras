{"ast":null,"code":"var _jsxFileName = \"/home/juan/Escritorio/React/juan_carreras/src/context/CartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/React.createContext([]);\nCartContext.displayName = \"CartContext\";\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = React.useState([]);\n\n  const addItem = item => {\n    setCart([...cart, item]);\n  };\n\n  const removeItem = id => {// Eliminar producto con id elegido.\n  };\n\n  const clear = () => {\n    setCart([]);\n  };\n\n  const isInCart = id => {// Chequear si existe un producto con el id elegido.\n  };\n\n  const getQuantity = () => {\n    let quantity = 0;\n    cart.forEach(product => {\n      quantity += Number(product.quantity);\n    });\n    return quantity;\n  };\n\n  const value = {\n    cart,\n    addItem,\n    removeItem,\n    clear,\n    isInCart,\n    getQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n\n  const context = React.useContext(CartContext);\n\n  if (!context) {\n    throw new Error(\"useCart debe usarse desde adentro de un CartProvider\");\n  }\n\n  return context;\n};\n\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/juan/Escritorio/React/juan_carreras/src/context/CartContext.js"],"names":["React","CartContext","createContext","displayName","CartProvider","children","cart","setCart","useState","addItem","item","removeItem","id","clear","isInCart","getQuantity","quantity","forEach","product","Number","value","useCart","context","useContext","Error"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAN,CAAoB,EAApB,CAApB;AACAD,WAAW,CAACE,WAAZ,GAA0B,aAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AAExBH,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUI,IAAV,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAIC,EAAD,IAAQ,CACzB;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAClBN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,QAAQ,GAAIF,EAAD,IAAQ,CACvB;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAG,CAAf;AACAV,IAAAA,IAAI,CAACW,OAAL,CAAcC,OAAD,IAAa;AACxBF,MAAAA,QAAQ,IAAIG,MAAM,CAACD,OAAO,CAACF,QAAT,CAAlB;AACD,KAFD;AAGA,WAAOA,QAAP;AACD,GAND;;AAQA,QAAMI,KAAK,GAAG;AAAEd,IAAAA,IAAF;AAAQG,IAAAA,OAAR;AAAiBE,IAAAA,UAAjB;AAA6BE,IAAAA,KAA7B;AAAoCC,IAAAA,QAApC;AAA8CC,IAAAA;AAA9C,GAAd;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA,cAAqCf;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BM;;GAAMD,Y;;KAAAA,Y;AAgCb,OAAO,MAAMiB,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAGtB,KAAK,CAACuB,UAAN,CAAiBtB,WAAjB,CAAhB;;AACA,MAAI,CAACqB,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CANM;;IAAMD,O","sourcesContent":["import * as React from \"react\";\n\nconst CartContext = React.createContext([]);\nCartContext.displayName = \"CartContext\";\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = React.useState([]);\n\n  const addItem = (item) => {\n    \n    setCart([...cart, item]);\n  };\n\n  const removeItem = (id) => {\n    // Eliminar producto con id elegido.\n  };\n\n  const clear = () => {\n    setCart([]);\n  };\n\n  const isInCart = (id) => {\n    // Chequear si existe un producto con el id elegido.\n  };\n\n  const getQuantity = () => {\n    let quantity = 0;\n    cart.forEach((product) => {\n      quantity += Number(product.quantity);\n    });\n    return quantity;\n  };\n\n  const value = { cart, addItem, removeItem, clear, isInCart, getQuantity };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart debe usarse desde adentro de un CartProvider\");\n  }\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}